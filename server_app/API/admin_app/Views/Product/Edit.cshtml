@model admin_app.Models.Product

@{
    ViewBag.Title = "Update";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("edit", "product", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">Update User</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @if (ViewBag.Error != null)
                        {
                            <p class="text-danger">@ViewBag.Error</p>
                        }

                        <div class="form-group w-50">
                            @Html.LabelFor(model => model.name_product, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.name_product, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.name_product, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group w-50">
                            @Html.LabelFor(model => model.price_product, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.price_product, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.price_product, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group w-50">
                            @Html.LabelFor(model => model.describe, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.describe, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.describe, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.id_category, htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownList("id_category", (IEnumerable<SelectListItem>)ViewBag.category)
                        </div>

                        <div class="form-group w-50">
                            @Html.LabelFor(model => model.image, htmlAttributes: new { @class = "control-label" })
                            @Html.TextBoxFor(model => model.image, new { @class = "form-control-file", type = "file" })
                            @Html.ValidationMessageFor(model => model.image, "", new { @class = "text-danger" })
                        </div>

                        <input type="submit" class="btn btn-primary" value="Update">
                    </div>
                </div>
            </div>
        </div>
        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div>
}

